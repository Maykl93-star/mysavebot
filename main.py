import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import FSInputFile
from aiogram.utils import executor
from yt_dlp import YoutubeDL

BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler()
async def download_handler(message: types.Message):
    url = message.text.strip()

    if "instagram.com" in url:
        await message.answer("üîç –°–∫–∞—á–∏–≤–∞—é —Ñ–æ—Ç–æ —Å Instagram...")

        ydl_opts_preview = {
            'format': 'best',
            'outtmpl': 'preview.%(ext)s',
            'noplaylist': True,
            'quiet': True,
        }

        ydl_opts_max = {
            'format': 'best',
            'outtmpl': 'full_quality.%(ext)s',
            'noplaylist': True,
            'quiet': True,
        }

        try:
            # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é
            with YoutubeDL(ydl_opts_preview) as ydl:
                info_dict = ydl.extract_info(url, download=True)
                preview_file = ydl.prepare_filename(info_dict)

            await message.answer_photo(FSInputFile(preview_file))

            # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
            with YoutubeDL(ydl_opts_max) as ydl:
                info_dict = ydl.extract_info(url, download=True)
                full_file = ydl.prepare_filename(info_dict)

            await message.answer_document(FSInputFile(full_file), caption="–î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ üì∑")

            os.remove(preview_file)
            os.remove(full_file)

        except Exception as e:
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ Instagram —Ñ–æ—Ç–æ.")
            print(e)

    else:
        await message.answer("‚ö†Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ Instagram —Ñ–æ—Ç–æ.")

if __name__ == "__main__":
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
