import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import FSInputFile
from aiogram.enums import ParseMode
from aiogram.utils.markdown import hbold
from aiogram import F
from aiogram.filters import CommandStart, Command

import yt_dlp
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")

dp = Dispatcher()
bot = Bot(BOT_TOKEN, parse_mode=ParseMode.HTML)

@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî MySaveBot\n"
        "üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑:\n"
        "‚Ä¢ YouTube (–≤–∏–¥–µ–æ –∏ Shorts)\n"
        "‚Ä¢ TikTok (–±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤)\n"
        "‚Ä¢ Instagram (Reels, –ø–æ—Å—Ç—ã, —Å—Ç–æ—Ä–∏—Å)\n"
        "üîó –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É ‚Äî –ø–æ–ª—É—á–∏ –≤–∏–¥–µ–æ\n"
        "‚ùì –ü–æ–º–æ—â—å: /help"
    )

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer("–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ —Å YouTube, TikTok –∏–ª–∏ Instagram.")

@dp.message(F.text.contains("http"))
async def download_video(message: types.Message):
    url = message.text.strip()
    await message.answer("‚è≥ –°–∫–∞—á–∏–≤–∞—é...")

    try:
        ydl_opts = {
            'outtmpl': 'video.%(ext)s',
            'format': 'bestvideo+bestaudio/best',
            'merge_output_format': 'mp4'
        }

        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)
            if not filename.endswith('.mp4'):
                filename += '.mp4'

        video = FSInputFile(filename)
        await message.answer_video(video)
        os.remove(filename)

    except Exception as e:
        logging.exception(e)
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏. –ü—Ä–æ–≤–µ—Ä—å —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())
